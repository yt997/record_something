总结：
A*算法 必须要求：开始点、终点、开启列表、关闭列表、f值计算
f = g(距离起点最近的距离)+h(距离终点最近的距离)


首先我们将开始点放入到关闭列表中，然后遍历开始点周围的节点，将不是边界的、不是阻挡的节点放入到开启列表中，通过算法 获取到f值最小的节点,将其作为下一个开始点，添加到关闭列表中，并从开启列表中移除。然后继续遍历，直到 开始节点==终点，我们就返回最终的结果。结果是通过节点的父对象一层层往上遍历获取到的。如果有父对象，就将其添加到一个新的list中，然后最后列表在反转，就获取到了我们的最短路径。并返回，如果在 遍历周围节点后，发现开启列表没有是空的，说明死路了。直接返回 openList.Count==0;